"use strict";(self.webpackChunkxrmod_manual=self.webpackChunkxrmod_manual||[]).push([[1035],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,O=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(O,o(o({ref:t},s),{},{components:n})):a.createElement(O,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"OnLoad"},o=void 0,l={unversionedId:"callbacl-api/OnLoad",id:"callbacl-api/OnLoad",title:"OnLoad",description:"Description",source:"@site/docs/open-api-pure-csharp/callbacl-api/OnLoad.md",sourceDirName:"callbacl-api",slug:"/callbacl-api/OnLoad",permalink:"/zh-Hans/open-api-pure-csharp/callbacl-api/OnLoad",draft:!1,editUrl:"https://github.com/Phantomxm2021/xrmod-engine-docs-source/tree/main/docs/open-api-pure-csharp/callbacl-api/OnLoad.md",tags:[],version:"current",frontMatter:{title:"OnLoad"},sidebar:"tutorialSidebar",previous:{title:"OnEvent",permalink:"/zh-Hans/open-api-pure-csharp/callbacl-api/OnEvent"},next:{title:"OnUpdate",permalink:"/zh-Hans/open-api-pure-csharp/callbacl-api/OnUpdate"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"OnLoad method called when the ARExperience package is loaded. OnLoad method is generally used to load resources and prepare resources."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'private const string CONST_CANVAS = "Canvas";\nprivate const string CONST_PROJECT_NAME = "PortalExample";\npublic static readonly API API = new API();\nprivate GameObject canvas;\nprivate GameObject tipsUI;\nprivate GameObject augmentedRealityVirtualObject;\nprivate Transform augmentedRealityVisualizerTransform;\nprivate Transform mainCameraTrans;\n\u200b\n//Please delete the function if it is not used\npublic void OnLoad()\n{\n    //Loading the UGUI\n    API.LoadGameObject(CONST_PROJECT_NAME, CONST_CANVAS,\n        _canvas =>\n        {\n            canvas = API.InstanceGameObject(_canvas, "", null);\n            tipsUI = API.FindGameObjectByName("Tips");\n            tipsUI.SetActive(true);\n        });\n\n    //Get MainCamera(ARCamera)\n    mainCameraTrans = GameObject.FindWithTag("MainCamera").transform;\n\n    //Loding AR virutal object\n    API.LoadGameObject(CONST_PROJECT_NAME, CONST_PROJECT_NAME, _augmentedRealityVirutalObject =>\n    {\n        augmentedRealityVirtualObject = API.InstanceGameObject(_augmentedRealityVirutalObject, "", null);\n        augmentedRealityVisualizerTransform = augmentedRealityVirtualObject.transform;\n        augmentedRealityVirtualObject.SetActive(false);\n    });\n}\n')))}u.isMDXComponent=!0}}]);