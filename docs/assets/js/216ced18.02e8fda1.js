"use strict";(self.webpackChunkxrmod_manual=self.webpackChunkxrmod_manual||[]).push([[6233],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),y=c(n),m=i,f=y["".concat(p,".").concat(m)]||y[m]||s[m]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=y;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},55053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const o={sidebar_position:7,title:"Get NetworkConnection Unit"},a=void 0,l={unversionedId:"multiplayer-api/utility/GetNetworkConnectionUnit",id:"multiplayer-api/utility/GetNetworkConnectionUnit",title:"Get NetworkConnection Unit",description:"Description",source:"@site/docs/open-api-visual-scripting/multiplayer-api/utility/GetNetworkConnectionUnit.md",sourceDirName:"multiplayer-api/utility",slug:"/multiplayer-api/utility/GetNetworkConnectionUnit",permalink:"/open-api-visual-scripting/multiplayer-api/utility/GetNetworkConnectionUnit",draft:!1,editUrl:"https://github.com/Phantomxm2021/xrmod-engine-docs-source/tree/main/docs/open-api-visual-scripting/multiplayer-api/utility/GetNetworkConnectionUnit.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Get NetworkConnection Unit"},sidebar:"tutorialSidebar",previous:{title:"Get LocalPlayer Unit",permalink:"/open-api-visual-scripting/multiplayer-api/utility/GetLocalPlayerUnit"},next:{title:"Get NetworkPrefab Unit",permalink:"/open-api-visual-scripting/multiplayer-api/utility/GetNetworkPrefabUnit"}},p={},c=[{value:"Description",id:"description",level:2},{value:"Return",id:"return",level:2}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Get Information about the player connecting to the server."),(0,i.kt)("h2",{id:"return"},"Return"),(0,i.kt)("p",null,"Network Connection To Server"))}s.isMDXComponent=!0}}]);